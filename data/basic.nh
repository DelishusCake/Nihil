/*
A basic syntax example for testing and whatnot.
See basic.c for the output from this file
*/
main :: () -> i32
{
	// You can call functions before you define them
	do_print(100);
	
	// Defered expressions!
	defer printf("Hi!\n");

	// Basic pointer types!
	let var n := 1;
	let r:ptr<var i32> = &n;
	let p:ptr<ptr<var i32>> = &r;
	
	defer printf("\n%d %d\n", *r, **p);

	// Basic type inferencing
	let var m := n;
	let var k := (u32)(m + m);

	let b := false;
	if (!b || !return_nil())
	{
		*r = 4 + 4;
		return 0;
	} 
	return 1;
}

do_print :: (lim:u32)
{
	let l := lim;

	defer printf("\n");
	// Non-inclusive:
	// for (i:u32 in [0, lim))
	for (i:u32 in [0, l])
	{
		printf("%d ", i);
	}
}

return_nil :: () -> ptr<var void>
{
	return nil;
}